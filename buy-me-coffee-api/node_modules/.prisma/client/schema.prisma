generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "prisma+postgres://accelerate.prisma-data.net/?api_key=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhcGlfa2V5IjoiMDFKVlY2Vks0SlBZRVJCUFFYVEdQMTJGUlIiLCJ0ZW5hbnRfaWQiOiI1ZjRiMjYzNDYzMTNiMzg4MTlkYzljYmY0NTBjZDBkOTgyZTdhNjM4YWNkMTE3YTViZjUyMDgzMjdhYTdmYWI0IiwiaW50ZXJuYWxfc2VjcmV0IjoiOWFkZDljMGYtNDkyNy00MTQ2LTk4NmItNWJmMmU0MjRmMGUzIn0.ipW-zefXEpPVVSrToayXiVPC8Of333O63WHwIbsC8aA"
}

model User {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  password  String
  username  String     @unique
  profile   Profile?
  bankCard  BankCard?
  donations Donation[] @relation("DonationsSent")
  received  Donation[] @relation("DonationsReceived")
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Profile {
  id              Int      @id @default(autoincrement())
  name            String   @unique
  about           String
  avatarImage     String
  socialMediaUrl  String
  backgroundImage String?
  successMessage  String?
  userId          Int      @unique
  user            User     @relation(fields: [userId], references: [id])
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model BankCard {
  id         Int      @id @default(autoincrement())
  country    String
  firstName  String
  lastName   String
  cardNumber String
  expiryDate DateTime
  userId     Int      @unique
  user       User     @relation(fields: [userId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Donation {
  id             Int    @id @default(autoincrement())
  amount         Int
  specialMessage String

  recipientId Int
  recipient   User @relation("DonationsReceived", fields: [recipientId], references: [id])

  senderId Int
  sender   User @relation("DonationsSent", fields: [senderId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
